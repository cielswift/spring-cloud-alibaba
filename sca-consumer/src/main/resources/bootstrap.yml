server:
  port: 25110
  servlet:
    context-path: /consumer
  http2:  #2.0
    enabled: true
  compression:   #压缩
    enabled: true
    mime-types: #压缩支持的类型
      - application/json
      - application/xml
      - text/html
      - text/xml
      - text/plain
  undertow:
    io-threads: 8
    worker-threads: 128
    buffer-size: 1024
    direct-buffers: true

spring:
  application:
    name: consumer #注册到nacos后会作为服务名称,多个相同的服务名称为一个集群
  aop:
    proxy-target-class: true #使用cglib代理
  main:
    allow-bean-definition-overriding: true #bean冲突覆盖
  profiles:
    active: dev #开发模式
  redis:
    host: 127.0.0.1
    port: 6510
    password: ciel
    database: 13
  cloud:
    config:
      allow-override: true #允许本地配置覆盖远程配置
      override-none: false #是否一切配置已本地配置为准 外部属性应具有最低优先级，并且不应覆盖任何现有属性源
      override-system-properties: true #外部属性应覆盖系统属性
    nacos:  #使用nacos注册中心
      discovery: #注册中心
        server-addr: 127.0.0.1:13100,127.0.0.1:13101,127.0.0.1:13102
        namespace: a998603d-3546-4ddc-9099-2ed82a6f3a68 #开发环境
        group: DEFAULT_GROUP #组
        cluster-name: consumer #集群名称; 要末不指定, 要末集群下实例的集群名称相同
        metadata: #指定元数据
          myName: xiapeixin
          youMother: fuck
      config: #配置中心
        server-addr: 127.0.0.1:13100,127.0.0.1:13101,127.0.0.1:13102
        file-extension: yaml  #指定读取的配置文件后缀; dataId默认${spring.application.name}-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
        namespace: a998603d-3546-4ddc-9099-2ed82a6f3a68 #开发环境
        group: DEFAULT_GROUP #组
        prefix: application-dev  #文件名 ;如果没有配置则默认为 ${spring.appliction.name} (优先级高)
        refresh-enabled: true #刷新配置文件
        extension-configs: #其他配置
          - dataId: other-dev.yaml
            group: DEFAULT_GROUP
            refresh: true
        shared-configs: #其他共享配置
          - dataId: other-dev.yaml
            group: DEFAULT_GROUP
            refresh: true

    sentinel: #限流
      enabled: true
      eager: false #取消懒加载 默认true 懒加载
      filter:
        enabled: true #对springmvc端点的保护
      transport:
        dashboard: 127.0.0.1:16820 #控制台地址
        port: 8729 #端口配置会在应用对应的机器上启动一个 Http Server，该 Server 会与 Sentinel 控制台做交互。比如 Sentinel 控制台添加了一个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中。若端口冲突会自动向下探测可用的端口。
      datasource: #添加Nacos数据源配置
        c1:
          nacos: #从nacos 获取配置
            server-addr: 127.0.0.1:13100,127.0.0.1:13101,127.0.0.1:13102
            namespace: a998603d-3546-4ddc-9099-2ed82a6f3a68 #开发环境
            dataId: sentinel-dev #文件名
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow
        c2:
          file: #class下获取配置
            file: classpath:flowrule.json
            data-type: json
            rule-type: flow

  #  //resource：资源名称；
#  //limitApp：来源应用；
#  //grade：阈值类型，0表示线程数，1表示QPS；
#  //count：单机阈值；
#  //strategy：流控模式，0表示直接，1表示关联，2表示链路；
#  //controlBehavior：流控效果，0表示快速失败，1表示Warm Up，2表示排队等待；
#  //clusterMode：是否集群。

  zipkin:  #链路追踪
    base-url: http://127.0.0.1:9411/
  sleuth:
    sampler:
      probability: 1 #percentage是采样比例  默认0.1

dubbo: #dubbo配置
  protocol:
    name: dubbo #dubbo协议
    port: 20880 #协议端口
    accesslog: true  #将访问日志输出到当前应用的log4j日志
  registry:
    address: nacos://127.0.0.1:13100?backup=127.0.0.1:13101,127.0.0.1:13102&namespace=a998603d-3546-4ddc-9099-2ed82a6f3a68 #使用nacos注册中心
  application:
    qos-enable: false #运维服务是否开启
  consumer:
    check: false #启动时就检查服务
    version: 1.0 #版本
    timeout: 600000  #10分钟
    retries: 0 #禁止重试 为了debug
    loadbalance: roundrobin #负载均衡策略，合法值包括：随机，轮循，最少活跃; random, roundrobin, leastactive

resttemplate: #redis 支持sentinel
  sentinel:
    enabled: true

feign:
  sentinel: #开启对于sentinel的支持
    enabled: true
  client:  #feign超时
    default-config: default #默认配置名称
    config:
      default: #全局默认配置
        connectTimeout: 600000
        readTimeout: 600000
        loggerLevel: FULL
#        requestInterceptors: 全局默认
#          - com.ciel.scaconsumer.feignext.FeignInterceptor
      producer10:  #调用的微服务的名称
        connectTimeout: 600000
        readTimeout: 600000
        loggerLevel: FULL
  httpclient:
    enabled: true #feign性能优化 ,使用连接池 ,引入依赖
    max-connections: 200 #最大连接数
    max-connections-per-route: 50 #单个路径最大连接数
#  okhttp:
#    enabled: true #feign性能优化 ,使用连接池
  compression:
    request:
      enabled: true #是否对请求进行GZIP压缩
      mime-types:  #指定压缩的请求数据类型
        - application/json
        - application/xml
        - text/html
        - text/xml
        - text/plain
      min-request-size: 2048 #超过该大小的请求会被压缩
    response:
      enabled: true #是否对响应进行GZIP压缩

ribbon: #超时设置
  ReadTimeout: 600000
  ConnectTimeout: 600000

management:
  endpoints:
    web:
      exposure:
        include: '*' #暴漏端点
  endpoint:
    health:
      show-details: always

logging: #日志
  config: classpath:logback-spring.xml
  level:
    com.ciel.scaconsumer.controller: debug #配合feign 这里只有debug feign才会打印日志
    com.ciel.scaconsumer.feignext: debug #配合feign 这里只有debug feign才会打印日志

---
spring: #多文档模式,定义一些其他配置
  profiles:
    active: dev